/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.GameController;
import Controller.ServiceController;
import java.awt.Dimension;
import java.awt.Image;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Formatter;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author moham
 */
public class GameFrame extends javax.swing.JFrame {

    /**
     * Creates new form GameFrame
     * @param serviceController
     */
    public GameFrame(ServiceController serviceController) {
        this.gameController = new GameController(this, serviceController);
        this.buttons = new ArrayList<>();
        
        
        //Initialisation de l'image d'arrière plan :
        MainGameBackgroundImage bcImg = new MainGameBackgroundImage();
        setContentPane(bcImg);
        

        
        initComponents();
        jPanel1.setOpaque(false);
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        
        
        //recupération du joueur et son high score : 
        playerName.setText("Player : " + serviceController.getCurrentPlayer().getUserName());
        if (gameController.getServiceController().getCurrentPlayer().getHighScore() != 0){
            int scoreSeconds = gameController.getServiceController().getCurrentPlayer().getHighScore();
            
            int minutes = scoreSeconds / 60;
            int seconds = scoreSeconds % 60;
            
            String score = String.format("%02d : %02d", minutes, seconds);
            highScore.setText(score);
        }
        
        
        //listant tous les buttons dans la liste buttons : 
        buttons.add(jButton1);
        buttons.add(jButton2);
        buttons.add(jButton3);
        buttons.add(jButton4);
        buttons.add(jButton5);
        buttons.add(jButton6);
        buttons.add(jButton7);
        buttons.add(jButton8);
        buttons.add(jButton9);
        buttons.add(jButton10);
        buttons.add(jButton11);
        buttons.add(jButton12);
        buttons.add(jButton13);
        buttons.add(jButton14);
        buttons.add(jButton15);
        buttons.add(jButton16);
       
        
        //l'implementaion du chrono :
        timer = new Timer (1000, e -> {
            Formatter formatter1 = new Formatter();
            Formatter formatter2 = new Formatter();
            
            seconds++;
            if (seconds == 60){
                minutes++;
                seconds = 0;
            }
            timerLabel.setText(formatter1.format("%02d", minutes)+" : "+ formatter2.format("%02d", seconds));
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timeLabel = new javax.swing.JLabel();
        essaisLabel = new javax.swing.JLabel();
        playerName = new javax.swing.JLabel();
        highScoreLabel = new javax.swing.JLabel();
        timerLabel = new javax.swing.JLabel();
        essaisNumber = new javax.swing.JLabel();
        highScore = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        timeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ressources/TIME.png"))); // NOI18N

        essaisLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        essaisLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ressources/Attemps.png"))); // NOI18N

        playerName.setBackground(new java.awt.Color(0, 0, 0));
        playerName.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        playerName.setForeground(new java.awt.Color(255, 255, 255));
        playerName.setText("Player : ");

        highScoreLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        highScoreLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ressources/HIGH SCORE.png"))); // NOI18N

        timerLabel.setBackground(new java.awt.Color(0, 0, 0));
        timerLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        timerLabel.setForeground(new java.awt.Color(255, 255, 255));
        timerLabel.setText("00 : 00");

        essaisNumber.setBackground(new java.awt.Color(0, 0, 0));
        essaisNumber.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        essaisNumber.setForeground(new java.awt.Color(255, 255, 255));
        essaisNumber.setText("3");

        highScore.setBackground(new java.awt.Color(0, 0, 0));
        highScore.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        highScore.setForeground(new java.awt.Color(255, 255, 255));
        highScore.setText("-- : --");

        jPanel1.setLayout(new java.awt.GridLayout(4, 4, 20, 20));

        jButton8.setText("jButton1");
        jButton8.setBorder(null);
        jButton8.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton8);

        jButton9.setText("jButton1");
        jButton9.setBorder(null);
        jButton9.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton9);

        jButton10.setText("jButton1");
        jButton10.setBorder(null);
        jButton10.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton10);

        jButton11.setText("jButton1");
        jButton11.setBorder(null);
        jButton11.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton11);

        jButton1.setText("jButton1");
        jButton1.setBorder(null);
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton12.setText("jButton1");
        jButton12.setBorder(null);
        jButton12.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton12);

        jButton2.setText("jButton1");
        jButton2.setBorder(null);
        jButton2.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton2);

        jButton13.setText("jButton1");
        jButton13.setBorder(null);
        jButton13.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton13);

        jButton3.setText("jButton1");
        jButton3.setBorder(null);
        jButton3.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton3);

        jButton14.setText("jButton1");
        jButton14.setBorder(null);
        jButton14.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton14);

        jButton4.setText("jButton1");
        jButton4.setBorder(null);
        jButton4.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton15.setText("jButton1");
        jButton15.setBorder(null);
        jButton15.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton15);

        jButton5.setText("jButton1");
        jButton5.setBorder(null);
        jButton5.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton5);

        jButton16.setText("jButton1");
        jButton16.setBorder(null);
        jButton16.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton16);

        jButton6.setText("jButton1");
        jButton6.setBorder(null);
        jButton6.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton6);

        jButton7.setText("jButton1");
        jButton7.setBorder(null);
        jButton7.setPreferredSize(new java.awt.Dimension(150, 200));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClickedActionPerformerd(evt);
            }
        });
        jPanel1.add(jButton7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(essaisNumber))
                            .addComponent(essaisLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timerLabel)
                                    .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(highScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(highScore, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 51, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(363, 363, 363))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(playerName, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(essaisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(essaisNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(highScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(highScore, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        //la premier visualisation des images de chaque carte :
        for (JButton b:buttons){
            ImageIcon imageCard = getResizedImageIcon(gameController
                    .getCards()
                    .get(buttons.indexOf(b))
                    .getImage()
            );
            b.setIcon(imageCard);
        }
        
        //cachant les images après 6.5 seconds :
        Timer showCardImages = new Timer(6500, e -> {  
            ImageIcon backImage = getResizedImageIcon(originalIcon);
            for (JButton b:buttons){
                b.setText("");
                b.setIcon(backImage);
            }
            timer.start();
        });
        showCardImages.setRepeats(false);
        showCardImages.start();
    }//GEN-LAST:event_formWindowOpened

    private void ButtonClickedActionPerformerd(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClickedActionPerformerd
        
        //la logique des buttons cliquées :
        if (firstSelected == null){
            firstSelected = (JButton) evt.getSource();
            revealCard(firstSelected);
        }    
        else if (secondSelected == null){
            secondSelected = (JButton) evt.getSource();
            revealCard(secondSelected);
            boolean result = gameController.checkCouples(buttons.indexOf(firstSelected), buttons.indexOf(secondSelected));
            
            
            //vérification des paires correspondantes après 1 second:
            Timer checkMatchingTimer = new Timer (1000, e -> {
                if (result){
                    disableButtons();
                }else{
                    essaisNumber.setText(""+gameController.getEssais());
                    hideCards();
                }
            });
            checkMatchingTimer.setRepeats(false);
            checkMatchingTimer.start();
            
            //la vérification de la fin du jeu :
            if (gameController.checkEndGame() == 1){
                try{
                    timer.stop();
                    gameController.checkScoreUpdate();
                    showCongratsMessage();
                    
                }catch (SQLException e){
                    System.out.println(e.getMessage());
                }
            }else if (gameController.checkEndGame() == -1){
                timer.stop();
                showGameOverMessage();
            }
        }
        
    }//GEN-LAST:event_ButtonClickedActionPerformerd
    
    //visualiser l'image du carte cliquée :
    public void revealCard(JButton clickedButton){
        int index = buttons.indexOf(clickedButton);
        ImageIcon imageCard = getResizedImageIcon(gameController
            .getCards()
            .get(index)
            .getImage()
        );
        clickedButton.setIcon(imageCard);
    }
    
    //cachant les deux cartes qui sont pas matchés :
    public void hideCards(){
        ImageIcon backImage = getResizedImageIcon(originalIcon);
        
        firstSelected.setIcon(backImage);
        secondSelected.setIcon(backImage);
        
        firstSelected = null;
        secondSelected = null;
    }
    
    //désactivation des images matchés :
    public void disableButtons(){
        firstSelected.setDisabledIcon(firstSelected.getIcon());
        secondSelected.setDisabledIcon(secondSelected.getIcon());
        
        firstSelected = null;
        secondSelected = null;
    }
    
    //adapter l'image à la taille du bouton
    public ImageIcon getResizedImageIcon(ImageIcon originalImage){
        Dimension size = jButton1.getPreferredSize();
        Image scaledImage = originalImage.getImage().getScaledInstance(
                size.width,
                size.height, 
                Image.SCALE_SMOOTH
        );
        return new ImageIcon(scaledImage);
    }
    
    //le message à afficher en cas de victoire
    public void showCongratsMessage(){
       String score = String.format("%02d : %02d", minutes, seconds);
       int option = JOptionPane.showOptionDialog(
           this,
           "Congratulations!\nYour Score is " + score + "\nDo you want to play again?",
           "Victory",
           JOptionPane.YES_NO_OPTION,
           JOptionPane.INFORMATION_MESSAGE,
           null,
           new String[]{"Restart", "Back"},
           "Restart"
       );

       if (option == JOptionPane.YES_OPTION) {
           dispose();
           new GameFrame(gameController.getServiceController()).setVisible(true);
       } else {
           dispose();
           new LoginFrame(gameController.getServiceController()).setVisible(true);
       }
        
    }
    
    //le message à afficher en cas de défait
    public void showGameOverMessage(){
        int option = JOptionPane.showOptionDialog(
            this,
            "Game Over!\nDo you want to try again?",
            "Game Over",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            new String[]{"Restart", "Back"},
            "Restart"
        );

        if (option == JOptionPane.YES_OPTION) {
            dispose();
            new GameFrame(gameController.getServiceController()).setVisible(true);
        } else {
            dispose();
            new LoginFrame(gameController.getServiceController()).setVisible(true);
        }

    }
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
            }
        });
    }*/
    
    public int getMinutes(){
        return this.minutes;
    }
    
    public int getSeconds(){
        return this.seconds;
    }
    
    
    private ArrayList<JButton> buttons;
    private GameController gameController;
    private ImageIcon originalIcon = new ImageIcon(getClass().getResource("/ressources/Cards/aBack side.png"));
    private int minutes;
    private int seconds;
    private Timer timer;
    private JButton firstSelected;
    private JButton secondSelected;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel essaisLabel;
    private javax.swing.JLabel essaisNumber;
    private javax.swing.JLabel highScore;
    private javax.swing.JLabel highScoreLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel playerName;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel timerLabel;
    // End of variables declaration//GEN-END:variables
}
